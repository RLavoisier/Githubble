name: Python Application CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"  # Utiliser une version stable

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Add virtual environment to PATH
      run: echo "${{ github.workspace }}/.venv/bin" >> $GITHUB_PATH

    - name: Set environment variables
      run: |
        echo "REDIS_URL=redis://localhost:6379/0" >> $GITHUB_ENV
        echo "POSTGRES_DB=postgresql://user:password@localhost:5432/githubble_local" >> $GITHUB_ENV

    - name: Run linters with pre-commit
      run: |
        poetry run pre-commit run --all-files

    - name: Run tests with pytest
      run: |
        poetry run pytest --maxfail=5 --disable-warnings
